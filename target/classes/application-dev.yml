#服务启动端口
server :
  port :  8080
  servlet:
    context-path: /boot

#数据库配置
spring:
  #启动title
  banner:
    image:
      location: static/banner.jpg
  #数据连接
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/boot_data?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=UTC
    username: root
    password: mysql
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    platform: mysql
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
  jpa:
    hibernate:
      ddl-auto: update #自动更新
    show-sql: true  #显示sql

  redis:
    host: 127.0.0.1
    #redis密码，没有密码的可以用～表示
    password: ~
    port: 6379
  #    pool:
  #      max-active: 100
  #      max-idle: 10
  #      max-wait: 100000

  # 日志输出
  #logging:
  #  file: ~/boot.log
  #  level:
  #    com.ibatis:DEBUG
  #    root:DEBUG

#task:
 # cron:0 0/5 * * * ?

